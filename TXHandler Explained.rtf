{\rtf1\ansi\ansicpg1252\cocoartf2822
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\froman\fcharset0 Times-Roman;\f1\fmodern\fcharset0 Courier;\f2\froman\fcharset0 Times-Bold;
\f3\froman\fcharset0 Times-Italic;\f4\fmodern\fcharset0 Courier-Bold;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;\red109\green109\blue109;}
{\*\expandedcolortbl;;\cssrgb\c0\c0\c0;\cssrgb\c50196\c50196\c50196;}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid1\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid1}
{\list\listtemplateid2\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid101\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid2}
{\list\listtemplateid3\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid201\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid3}
{\list\listtemplateid4\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid301\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{circle\}}{\leveltext\leveltemplateid302\'01\uc0\u9702 ;}{\levelnumbers;}\fi-360\li1440\lin1440 }{\listname ;}\listid4}
{\list\listtemplateid5\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid401\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid5}
{\list\listtemplateid6\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid501\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid6}
{\list\listtemplateid7\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid601\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid7}
{\list\listtemplateid8\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid701\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid8}
{\list\listtemplateid9\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid801\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid9}
{\list\listtemplateid10\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid901\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid10}
{\list\listtemplateid11\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid1001\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid11}
{\list\listtemplateid12\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid1101\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{circle\}}{\leveltext\leveltemplateid1102\'01\uc0\u9702 ;}{\levelnumbers;}\fi-360\li1440\lin1440 }{\listname ;}\listid12}
{\list\listtemplateid13\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid1201\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{circle\}}{\leveltext\leveltemplateid1202\'01\uc0\u9702 ;}{\levelnumbers;}\fi-360\li1440\lin1440 }{\listname ;}\listid13}
{\list\listtemplateid14\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid1301\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{circle\}}{\leveltext\leveltemplateid1302\'01\uc0\u9702 ;}{\levelnumbers;}\fi-360\li1440\lin1440 }{\listname ;}\listid14}
{\list\listtemplateid15\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid1401\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{circle\}}{\leveltext\leveltemplateid1402\'01\uc0\u9702 ;}{\levelnumbers;}\fi-360\li1440\lin1440 }{\listname ;}\listid15}
{\list\listtemplateid16\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid1501\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{circle\}}{\leveltext\leveltemplateid1502\'01\uc0\u9702 ;}{\levelnumbers;}\fi-360\li1440\lin1440 }{\listname ;}\listid16}
{\list\listtemplateid17\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid1601\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid17}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}{\listoverride\listid2\listoverridecount0\ls2}{\listoverride\listid3\listoverridecount0\ls3}{\listoverride\listid4\listoverridecount0\ls4}{\listoverride\listid5\listoverridecount0\ls5}{\listoverride\listid6\listoverridecount0\ls6}{\listoverride\listid7\listoverridecount0\ls7}{\listoverride\listid8\listoverridecount0\ls8}{\listoverride\listid9\listoverridecount0\ls9}{\listoverride\listid10\listoverridecount0\ls10}{\listoverride\listid11\listoverridecount0\ls11}{\listoverride\listid12\listoverridecount0\ls12}{\listoverride\listid13\listoverridecount0\ls13}{\listoverride\listid14\listoverridecount0\ls14}{\listoverride\listid15\listoverridecount0\ls15}{\listoverride\listid16\listoverridecount0\ls16}{\listoverride\listid17\listoverridecount0\ls17}}
\margl1440\margr1440\vieww26620\viewh18920\viewkind0
\deftab720
\pard\pardeftab720\sa240\partightenfactor0

\f0\fs24 \cf0 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Let's do a plain-English breakdown of your 
\f1\fs26 TxHandler.java
\f0\fs24  code, block by block.\
Think of this code as the 
\f2\b "Rulebook for a Bank Teller"
\f0\b0  \uc0\u55357 \u56425 \u8205 \u9878 \u65039 . Its job is to look at transactions and make sure nobody is cheating, spending money they don't have, or spending the same money twice.\
\pard\pardeftab720\partightenfactor0
\cf3 \strokec3 \
\pard\pardeftab720\sa240\partightenfactor0
\cf0 \strokec2 \
\pard\pardeftab720\sa280\partightenfactor0

\f2\b\fs28 \cf0 Imports and Class Definition\
\pard\pardeftab720\sa240\partightenfactor0

\f0\b0\fs24 \cf0 \
\pard\pardeftab720\partightenfactor0
\cf0 Java\
\
\pard\pardeftab720\partightenfactor0

\f1\fs26 \cf0 import java.security.PublicKey;\
import java.util.ArrayList;\
import java.util.Arrays;\
import java.util.HashSet;\
import java.util.List;\
import java.util.Set;\
\
public class TxHandler \{\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls1\ilvl0
\f2\b\fs24 \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Plain English:
\f0\b0  These are the "tools" we're importing from Java's standard library. We're telling the code we'll need tools for handling security (
\f1\fs26 PublicKey
\f0\fs24 ), making lists (
\f1\fs26 ArrayList
\f0\fs24 , 
\f1\fs26 List
\f0\fs24 ), managing groups of unique items (
\f1\fs26 HashSet
\f0\fs24 , 
\f1\fs26 Set
\f0\fs24 ), and helping with arrays (
\f1\fs26 Arrays
\f0\fs24 ).\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls1\ilvl0
\f1\fs26 \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 public class TxHandler \{ ... \}
\f0\fs24  is us saying, "I'm creating the official 'Transaction Handler' rulebook."\
\pard\pardeftab720\partightenfactor0
\cf3 \strokec3 \
\pard\pardeftab720\sa240\partightenfactor0
\cf0 \strokec2 \
\pard\pardeftab720\sa280\partightenfactor0

\f2\b\fs28 \cf0 The Teller's Ledger\
\pard\pardeftab720\sa240\partightenfactor0

\f0\b0\fs24 \cf0 \
\pard\pardeftab720\partightenfactor0
\cf0 Java\
\
\pard\pardeftab720\partightenfactor0

\f1\fs26 \cf0     private UTXOPool internalPool;\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls2\ilvl0
\f2\b\fs24 \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Plain English:
\f0\b0  This is the teller's own personal ledger.\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls2\ilvl0\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 A 
\f1\fs26 UTXOPool
\f0\fs24  is just a list of all the 
\f2\b U
\f0\b0 nspent 
\f2\b T
\f0\b0 ransaction 
\f2\b O
\f0\b0 utputs (think: all the spendable coins or uncashed checks) in the system.\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls2\ilvl0
\f1\fs26 \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 private
\f0\fs24  means only the teller (this 
\f1\fs26 TxHandler
\f0\fs24  class) can look at or change it.\
\pard\pardeftab720\partightenfactor0
\cf3 \strokec3 \
\pard\pardeftab720\sa240\partightenfactor0
\cf0 \strokec2 \
\pard\pardeftab720\sa280\partightenfactor0

\f2\b\fs28 \cf0 Starting the Teller's Shift (The Constructor)\
\pard\pardeftab720\sa240\partightenfactor0

\f0\b0\fs24 \cf0 \
\pard\pardeftab720\partightenfactor0
\cf0 Java\
\
\pard\pardeftab720\partightenfactor0

\f1\fs26 \cf0     public TxHandler(UTXOPool utxoPool) \{\
        // Defensive copy\
        this.internalPool = new UTXOPool(utxoPool);\
    \}\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls3\ilvl0
\f2\b\fs24 \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Plain English:
\f0\b0  This is what happens when the teller starts their shift.\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls3\ilvl0\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 They are handed the bank's official master ledger (
\f1\fs26 utxoPool
\f0\fs24 ).\
\ls3\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 The line 
\f1\fs26 this.internalPool = new UTXOPool(utxoPool);
\f0\fs24  is crucial. It means the teller 
\f2\b makes a photocopy
\f0\b0  of the master ledger.\
\ls3\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 This is a "defensive copy" so that as the teller processes new transactions, they are writing on their 
\f3\i photocopy
\f0\i0  and not messing up the bank's official record.\
\pard\pardeftab720\partightenfactor0
\cf3 \strokec3 \
\pard\pardeftab720\sa240\partightenfactor0
\cf0 \strokec2 \
\pard\pardeftab720\sa280\partightenfactor0

\f2\b\fs28 \cf0 The 5-Point Check-list (
\f4\fs30\fsmilli15210 isValidTx
\f2\fs28 )\
\pard\pardeftab720\sa240\partightenfactor0

\f0\b0\fs24 \cf0 \
This is the most important method. It's the teller's checklist for a 
\f3\i single
\f0\i0  transaction. It must pass 
\f2\b all five
\f0\b0  tests.\
\pard\pardeftab720\partightenfactor0
\cf0 Java\
\
\pard\pardeftab720\partightenfactor0

\f1\fs26 \cf0     public boolean isValidTx(Transaction tx) \{\
        if (tx == null) \{\
            return false;\
        \}\
\
        HashSet<UTXO> claimedUTXOs = new HashSet<>();\
        double inputSum = 0;\
        double outputSum = 0;\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls4\ilvl0
\f2\b\fs24 \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Plain English:
\f0\b0  This starts the check.\
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\sa240\partightenfactor0
\ls4\ilvl1
\f1\fs26 \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 if (tx == null)
\f0\fs24 : "If someone hands me a blank piece of paper, it's invalid."\
\ls4\ilvl1
\f1\fs26 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 claimedUTXOs = new HashSet<>()
\f0\fs24 : "I'm pulling out a 
\f3\i new, blank scrap of paper
\f0\i0 ." This is to track all the coins this 
\f3\i one transaction
\f0\i0  is trying to spend, to make sure it doesn't try to spend the same coin twice.\
\ls4\ilvl1
\f1\fs26 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 inputSum = 0; outputSum = 0;
\f0\fs24 : "I'm setting my 'Money IN' and 'Money OUT' counters to zero."\
\pard\pardeftab720\partightenfactor0
\cf3 \strokec3 \
\pard\pardeftab720\sa240\partightenfactor0
\cf0 \strokec2 \
\pard\pardeftab720\sa319\partightenfactor0

\f2\b \cf0 Checking the Inputs (Money IN)\
\pard\pardeftab720\sa240\partightenfactor0

\f0\b0 \cf0 \
\pard\pardeftab720\partightenfactor0
\cf0 Java\
\
\pard\pardeftab720\partightenfactor0

\f1\fs26 \cf0         for (int i = 0; i < tx.numInputs(); i++) \{\
            // ... get the input ...\
            UTXO utxo = new UTXO(input.prevTxHash, input.outputIndex);\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls5\ilvl0
\f2\b\fs24 \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Plain English:
\f0\b0  "I'm going to loop through every 'input' (every coin being spent) in this transaction."\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls5\ilvl0
\f1\fs26 \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 UTXO utxo = ...
\f0\fs24 : "I'm looking at the 'serial number' of the coin this input claims to be."\
\pard\pardeftab720\partightenfactor0
\cf0 Java\
\
\pard\pardeftab720\partightenfactor0

\f1\fs26 \cf0             // (1) Check if the claimed UTXO is in the pool\
            if (!this.internalPool.contains(utxo)) \{\
                return false;\
            \}\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls6\ilvl0
\f2\b\fs24 \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Rule (1):
\f0\b0  "Does this coin's serial number even exist in my ledger of spendable coins? No? 
\f2\b INVALID.
\f0\b0 "\
\pard\pardeftab720\partightenfactor0
\cf0 Java\
\
\pard\pardeftab720\partightenfactor0

\f1\fs26 \cf0             // (3) Check if this UTXO has already been claimed in this same transaction\
            if (claimedUTXOs.contains(utxo)) \{\
                return false;\
            \}\
            claimedUTXOs.add(utxo);\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls7\ilvl0
\f2\b\fs24 \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Rule (3):
\f0\b0  "Have I seen this 
\f3\i exact coin
\f0\i0  already 
\f3\i in this same transaction
\f0\i0 ? (Check my scrap paper). Yes? This is a double-spend! 
\f2\b INVALID.
\f0\b0 "\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls7\ilvl0
\f1\fs26 \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 claimedUTXOs.add(utxo);
\f0\fs24 : "Okay, it's a new coin. I'll write its serial number on my scrap paper so I can't be fooled again."\
\pard\pardeftab720\partightenfactor0
\cf0 Java\
\
\pard\pardeftab720\partightenfactor0

\f1\fs26 \cf0             // ... get the corresponding output ...\
            // (2) Check the signature\
            if (!Crypto.verifySignature(pubKey, message, signature)) \{\
                return false;\
            \}\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls8\ilvl0
\f2\b\fs24 \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Rule (2):
\f0\b0  "I'll look up this coin in my ledger to see who owns it (
\f1\fs26 pubKey
\f0\fs24 ). Now I'll check the signature on the transaction. Does the owner's signature match? No? 
\f2\b INVALID.
\f0\b0 "\
\pard\pardeftab720\partightenfactor0
\cf0 Java\
\
\pard\pardeftab720\partightenfactor0

\f1\fs26 \cf0             // (5) Add to the sum of input values\
            inputSum += correspondingOutput.value;\
        \}\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls9\ilvl0
\f2\b\fs24 \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Rule (5) (Part 1):
\f0\b0  "The signature is good! I'll add this coin's value to my 'Money IN' counter."\
\pard\pardeftab720\partightenfactor0
\cf3 \strokec3 \
\pard\pardeftab720\sa240\partightenfactor0
\cf0 \strokec2 \
\pard\pardeftab720\sa319\partightenfactor0

\f2\b \cf0 Checking the Outputs (Money OUT)\
\pard\pardeftab720\sa240\partightenfactor0

\f0\b0 \cf0 \
\pard\pardeftab720\partightenfactor0
\cf0 Java\
\
\pard\pardeftab720\partightenfactor0

\f1\fs26 \cf0         for (Transaction.Output output : tx.getOutputs()) \{\
            // ...\
            // (4) Check for non-negative output values\
            if (output.value < 0) \{\
                return false;\
            \}\
            // (5) Add to the sum of output values\
            outputSum += output.value;\
        \}\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls10\ilvl0
\f2\b\fs24 \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Plain English:
\f0\b0  "Now I'll loop through all the 'outputs' (the new coins this transaction is creating)."\
\ls10\ilvl0
\f2\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Rule (4):
\f0\b0  "Is this new coin trying to have a 
\f3\i negative
\f0\i0  value? That's impossible. 
\f2\b INVALID.
\f0\b0 "\
\ls10\ilvl0
\f2\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Rule (5) (Part 2):
\f0\b0  "Okay, it's a positive value. I'll add it to my 'Money OUT' counter."\
\pard\pardeftab720\partightenfactor0
\cf3 \strokec3 \
\pard\pardeftab720\sa240\partightenfactor0
\cf0 \strokec2 \
\pard\pardeftab720\sa319\partightenfactor0

\f2\b \cf0 Final Check\
\pard\pardeftab720\sa240\partightenfactor0

\f0\b0 \cf0 \
\pard\pardeftab720\partightenfactor0
\cf0 Java\
\
\pard\pardeftab720\partightenfactor0

\f1\fs26 \cf0         // (5) Check if input sum is greater than or equal to output sum\
        if (inputSum < outputSum) \{\
            return false;\
        \}\
\
        // If all checks pass\
        return true;\
    \}\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls11\ilvl0
\f2\b\fs24 \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Rule (5) (Final):
\f0\b0  "Let's look at my counters. Is the 'Money IN' total 
\f3\i less than
\f0\i0  the 'Money OUT' total? Are they trying to create money from thin air? 
\f2\b INVALID.
\f0\b0 "\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls11\ilvl0
\f1\fs26 \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 return true;
\f0\fs24 : "If the transaction passed all 5 checks, I'll stamp it 
\f2\b VALID
\f0\b0 ."\
\pard\pardeftab720\partightenfactor0
\cf3 \strokec3 \
\pard\pardeftab720\sa240\partightenfactor0
\cf0 \strokec2 \
\pard\pardeftab720\sa280\partightenfactor0

\f2\b\fs28 \cf0 Processing a Whole Pile of Transactions (
\f4\fs30\fsmilli15210 handleTxs
\f2\fs28 )\
\pard\pardeftab720\sa240\partightenfactor0

\f0\b0\fs24 \cf0 \
This is where the teller processes a big pile of transactions that arrived at the same time.\
\pard\pardeftab720\partightenfactor0
\cf0 Java\
\
\pard\pardeftab720\partightenfactor0

\f1\fs26 \cf0     public Transaction[] handleTxs(Transaction[] possibleTxs) \{\
        // ...\
        List<Transaction> acceptedTxs = new ArrayList<>();\
        Set<Transaction> unprocessedTxs = new HashSet<>(Arrays.asList(possibleTxs));\
\
        boolean progressMade = true;\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls12\ilvl0
\f2\b\fs24 \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Plain English:
\f0\b0 \
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\sa240\partightenfactor0
\ls12\ilvl1
\f1\fs26 \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 acceptedTxs
\f0\fs24 : "I'm starting a new, empty 'Approved Pile' for the transactions that pass."\
\ls12\ilvl1
\f1\fs26 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 unprocessedTxs
\f0\fs24 : "I'm making a copy of the whole pile I was given, this is my 'To-Do Pile'."\
\ls12\ilvl1
\f1\fs26 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 progressMade = true;
\f0\fs24 : "I'm setting a flag to 
\f1\fs26 true
\f0\fs24  to make sure my processing loop starts."\
\pard\pardeftab720\partightenfactor0
\cf0 Java\
\
\pard\pardeftab720\partightenfactor0

\f1\fs26 \cf0         while (progressMade) \{\
            progressMade = false;\
            Set<Transaction> processedInThisPass = new HashSet<>();\
\
            for (Transaction tx : unprocessedTxs) \{\
                if (isValidTx(tx)) \{\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls13\ilvl0
\f2\b\fs24 \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Plain English:
\f0\b0 \
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\sa240\partightenfactor0
\ls13\ilvl1
\f1\fs26 \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 while (progressMade)
\f0\fs24 : "I will keep looping through my 'To-Do Pile' 
\f2\b as long as I am making progress
\f0\b0 ." (This is the clever part!)\
\ls13\ilvl1
\f1\fs26 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 progressMade = false;
\f0\fs24 : "At the start of each pass, I'll assume I'm 
\f3\i not
\f0\i0  going to make progress."\
\ls13\ilvl1
\f1\fs26 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 processedInThisPass
\f0\fs24 : "I'm getting a 
\f3\i new
\f0\i0  blank scrap of paper to track what I approve 
\f3\i this pass
\f0\i0 ."\
\ls13\ilvl1
\f1\fs26 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 for (Transaction tx : unprocessedTxs)
\f0\fs24 : "Look at every transaction in the 'To-Do Pile'."\
\ls13\ilvl1
\f1\fs26 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 if (isValidTx(tx))
\f0\fs24 : "Run my 5-point checklist on it."\
\pard\pardeftab720\partightenfactor0
\cf0 Java\
\
\pard\pardeftab720\partightenfactor0

\f1\fs26 \cf0                     // Transaction is valid, accept it\
                    progressMade = true;\
                    acceptedTxs.add(tx);\
                    processedInThisPass.add(tx);\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls14\ilvl0
\f2\b\fs24 \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Plain English:
\f0\b0  "Hey, this one is valid!"\
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\sa240\partightenfactor0
\ls14\ilvl1
\f1\fs26 \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 progressMade = true;
\f0\fs24 : "Flip my flag to 
\f1\fs26 true
\f0\fs24 ! This tells the 
\f1\fs26 while
\f0\fs24  loop to run 
\f3\i at least one more time
\f0\i0  after this pass is done. (This is to handle dependencies\'97a transaction that fails now might pass later)."\
\ls14\ilvl1
\f1\fs26 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 acceptedTxs.add(tx);
\f0\fs24 : "Put this transaction on the final 'Approved Pile'."\
\ls14\ilvl1
\f1\fs26 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 processedInThisPass.add(tx);
\f0\fs24 : "Write this one down on my scrap paper to remove from the 'To-Do Pile' later."\
\pard\pardeftab720\partightenfactor0
\cf0 Java\
\
\pard\pardeftab720\partightenfactor0

\f1\fs26 \cf0                     // Update the internal UTXO pool\
                    // 1. Remove spent UTXOs (inputs)\
                    for (Transaction.Input input : tx.getInputs()) \{\
                        UTXO spentUTXO = new UTXO(input.prevTxHash, input.outputIndex);\
                        this.internalPool.removeUTXO(spentUTXO);\
                    \}\
\
                    // 2. Add new UTXOs (outputs)\
                    byte[] txHash = tx.getHash();\
                    for (int i = 0; i < tx.numOutputs(); i++) \{\
                        UTXO newUTXO = new UTXO(txHash, i);\
                        this.internalPool.addUTXO(newUTXO, newOutput);\
                    \}\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls15\ilvl0
\f2\b\fs24 \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Plain English:
\f0\b0  "This is the most important part: I am now 
\f2\b updating my photocopy of the ledger
\f0\b0 ."\
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\sa240\partightenfactor0
\ls15\ilvl1
\f2\b \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Loop 1 (Inputs):
\f0\b0  "Find every coin this transaction 
\f3\i spent
\f0\i0 ..."\
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\sa240\partightenfactor0
\ls15\ilvl1
\f1\fs26 \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 ...removeUTXO(...)
\f0\fs24 : "...and 
\f2\b cross it off
\f0\b0  my ledger. It's spent. It can't be spent again."\
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\sa240\partightenfactor0
\ls15\ilvl1
\f2\b \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Loop 2 (Outputs):
\f0\b0  "Find every coin this transaction 
\f3\i created
\f0\i0 ..."\
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\sa240\partightenfactor0
\ls15\ilvl1
\f1\fs26 \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 ...addUTXO(...)
\f0\fs24 : "...and 
\f2\b add it
\f0\b0  to my ledger. This is now a new, spendable coin."\
\pard\pardeftab720\partightenfactor0
\cf0 Java\
\
\pard\pardeftab720\partightenfactor0

\f1\fs26 \cf0             \}\
            // Remove all processed transactions from the main set\
            unprocessedTxs.removeAll(processedInThisPass);\
        \}\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls16\ilvl0
\f2\b\fs24 \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Plain English:
\f0\b0 \
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\sa240\partightenfactor0
\ls16\ilvl1\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 "I've finished one pass through the 'To-Do Pile'."\
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\sa240\partightenfactor0
\ls16\ilvl1
\f1\fs26 \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 unprocessedTxs.removeAll(...)
\f0\fs24 : "Now I'll take my scrap paper (
\f1\fs26 processedInThisPass
\f0\fs24 ) and remove all the transactions I just approved from the 'To-Do Pile' so I don't check them again."\
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\sa240\partightenfactor0
\ls16\ilvl1\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 "Now, the 
\f1\fs26 while
\f0\fs24  loop checks: 'Was 
\f1\fs26 progressMade
\f0\fs24  set to 
\f1\fs26 true
\f0\fs24 ?' If yes, it means I approved 
\f3\i at least one
\f0\i0  transaction, which might have just made 
\f3\i other
\f0\i0  transactions in the 'To-Do Pile' valid. So, I'll loop again. If 
\f1\fs26 progressMade
\f0\fs24  is still 
\f1\fs26 false
\f0\fs24 , it means I went through the whole pile and couldn't approve anything, so my job is done."\
\pard\pardeftab720\partightenfactor0
\cf0 Java\
\
\pard\pardeftab720\partightenfactor0

\f1\fs26 \cf0         // Convert the list of accepted transactions to an array\
        return acceptedTxs.toArray(new Transaction[acceptedTxs.size()]);\
    \}\
\}\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls17\ilvl0
\f2\b\fs24 \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Plain English:
\f0\b0  "Finally, I take my 'Approved Pile', convert it into a final list, and hand it back."\
}